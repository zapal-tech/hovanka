/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  collections: {
    journals: Journal
    'onboarding-form-submissions': OnboardingFormSubmission
    'onboarding-step-values': OnboardingStepValue
    tags: Tag
    articles: Article
    practices: Practice
    emotions: Emotion
    'emotions-statistics': EmotionsStatistic
    users: User
    'payload-jobs': PayloadJob
    'payload-locked-documents': PayloadLockedDocument
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  collectionsJoins: {
    users: {
      journalNotes: 'journals'
      onboardingForm: 'onboarding-form-submissions'
      emotionsStatistics: 'emotions-statistics'
    }
  }
  collectionsSelect: {
    journals: JournalsSelect<false> | JournalsSelect<true>
    'onboarding-form-submissions': OnboardingFormSubmissionsSelect<false> | OnboardingFormSubmissionsSelect<true>
    'onboarding-step-values': OnboardingStepValuesSelect<false> | OnboardingStepValuesSelect<true>
    tags: TagsSelect<false> | TagsSelect<true>
    articles: ArticlesSelect<false> | ArticlesSelect<true>
    practices: PracticesSelect<false> | PracticesSelect<true>
    emotions: EmotionsSelect<false> | EmotionsSelect<true>
    'emotions-statistics': EmotionsStatisticsSelect<false> | EmotionsStatisticsSelect<true>
    users: UsersSelect<false> | UsersSelect<true>
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>
  }
  db: {
    defaultIDType: number
  }
  globals: {
    onboarding: Onboarding
  }
  globalsSelect: {
    onboarding: OnboardingSelect<false> | OnboardingSelect<true>
  }
  locale: 'uk' | 'en'
  user: User & {
    collection: 'users'
  }
  jobs: {
    tasks: {
      'emotion-statistics': TaskEmotionStatistics
      inline: {
        input: unknown
        output: unknown
      }
    }
    workflows: unknown
  }
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journals".
 */
export interface Journal {
  id: number
  title?: string | null
  content?: string | null
  user: number | User
  type?: ('journal' | 'mood-tracker') | null
  emotions?: (number | null) | Emotion
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number
  firstName: string
  roles: ('root' | 'user')[]
  journalNotes?: {
    docs?: (number | Journal)[] | null
    hasNextPage?: boolean | null
  } | null
  signUpFlowCompleted?: boolean | null
  onboardingCompleted?: boolean | null
  onboardingStep?: ('userGoals' | 'initialEmotionalState' | 'wantedFeatures' | 'personalizedAINotificationsPermission') | null
  onboardingForm?: {
    docs?: (number | OnboardingFormSubmission)[] | null
    hasNextPage?: boolean | null
  } | null
  emotionsStatistics?: {
    docs?: (number | EmotionsStatistic)[] | null
    hasNextPage?: boolean | null
  } | null
  sub?: string | null
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding-form-submissions".
 */
export interface OnboardingFormSubmission {
  id: number
  user: number | User
  userGoals?: (number | OnboardingStepValue)[] | null
  initialEmotionalState?: (number | OnboardingStepValue)[] | null
  wantedFeatures?: (number | OnboardingStepValue)[] | null
  personalizedAINotificationsPermission?: boolean | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding-step-values".
 */
export interface OnboardingStepValue {
  id: number
  step: 'userGoals' | 'initialEmotionalState' | 'wantedFeatures'
  value: string
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emotions-statistics".
 */
export interface EmotionsStatistic {
  id: number
  user: number | User
  statistics?:
    | {
        emotion:
          | 'happy'
          | 'sad'
          | 'angry'
          | 'mad'
          | 'scared'
          | 'peaceful'
          | 'hateful'
          | 'hopeful'
          | 'sleepy'
          | 'excited'
          | 'calm'
          | 'frustrated'
          | 'lonely'
          | 'grateful'
          | 'confused'
        count: number
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emotions".
 */
export interface Emotion {
  id: number
  emotion:
    | 'happy'
    | 'sad'
    | 'angry'
    | 'mad'
    | 'scared'
    | 'peaceful'
    | 'hateful'
    | 'hopeful'
    | 'sleepy'
    | 'excited'
    | 'calm'
    | 'frustrated'
    | 'lonely'
    | 'grateful'
    | 'confused'
  parent?: (number | null) | Emotion
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number
  tag: string
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number
  title: string
  content: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  }
  tags?: (number | Tag)[] | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practices".
 */
export interface Practice {
  id: number
  title: string
  description?: string | null
  steps?:
    | {
        blocks?:
          | {
              type: 'text' | 'textarea' | 'media' | 'checkbox' | 'radio'
              text?: {
                content: string
                size: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'base' | 'small'
              }
              textarea?: {
                content: string
              }
              media?: {}
              checkbox?: {
                text: string
                size: 'base' | 'small'
              }
              radio?: {
                title?: string | null
                sizeText: 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'base' | 'small'
                options?:
                  | {
                      label: string
                      id?: string | null
                    }[]
                  | null
              }
              id?: string | null
            }[]
          | null
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  taskStatus?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  completedAt?: string | null
  totalTried?: number | null
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string
        completedAt: string
        taskSlug: 'inline' | 'emotion-statistics'
        taskID: string
        input?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        output?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        state: 'failed' | 'succeeded'
        error?:
          | {
              [k: string]: unknown
            }
          | unknown[]
          | string
          | number
          | boolean
          | null
        id?: string | null
      }[]
    | null
  taskSlug?: ('inline' | 'emotion-statistics') | null
  queue?: string | null
  waitUntil?: string | null
  processing?: boolean | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number
  document?:
    | ({
        relationTo: 'journals'
        value: number | Journal
      } | null)
    | ({
        relationTo: 'onboarding-form-submissions'
        value: number | OnboardingFormSubmission
      } | null)
    | ({
        relationTo: 'onboarding-step-values'
        value: number | OnboardingStepValue
      } | null)
    | ({
        relationTo: 'tags'
        value: number | Tag
      } | null)
    | ({
        relationTo: 'articles'
        value: number | Article
      } | null)
    | ({
        relationTo: 'practices'
        value: number | Practice
      } | null)
    | ({
        relationTo: 'emotions'
        value: number | Emotion
      } | null)
    | ({
        relationTo: 'emotions-statistics'
        value: number | EmotionsStatistic
      } | null)
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
    | ({
        relationTo: 'payload-jobs'
        value: number | PayloadJob
      } | null)
  globalSlug?: string | null
  user: {
    relationTo: 'users'
    value: number | User
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number
  user: {
    relationTo: 'users'
    value: number | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "journals_select".
 */
export interface JournalsSelect<T extends boolean = true> {
  title?: T
  content?: T
  user?: T
  type?: T
  emotions?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding-form-submissions_select".
 */
export interface OnboardingFormSubmissionsSelect<T extends boolean = true> {
  user?: T
  userGoals?: T
  initialEmotionalState?: T
  wantedFeatures?: T
  personalizedAINotificationsPermission?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding-step-values_select".
 */
export interface OnboardingStepValuesSelect<T extends boolean = true> {
  step?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  tag?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T
  content?: T
  tags?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "practices_select".
 */
export interface PracticesSelect<T extends boolean = true> {
  title?: T
  description?: T
  steps?:
    | T
    | {
        blocks?:
          | T
          | {
              type?: T
              text?:
                | T
                | {
                    content?: T
                    size?: T
                  }
              textarea?:
                | T
                | {
                    content?: T
                  }
              media?: T | {}
              checkbox?:
                | T
                | {
                    text?: T
                    size?: T
                  }
              radio?:
                | T
                | {
                    title?: T
                    sizeText?: T
                    options?:
                      | T
                      | {
                          label?: T
                          id?: T
                        }
                  }
              id?: T
            }
        id?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emotions_select".
 */
export interface EmotionsSelect<T extends boolean = true> {
  emotion?: T
  parent?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emotions-statistics_select".
 */
export interface EmotionsStatisticsSelect<T extends boolean = true> {
  user?: T
  statistics?:
    | T
    | {
        emotion?: T
        count?: T
        id?: T
      }
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T
  roles?: T
  journalNotes?: T
  signUpFlowCompleted?: T
  onboardingCompleted?: T
  onboardingStep?: T
  onboardingForm?: T
  emotionsStatistics?: T
  sub?: T
  updatedAt?: T
  createdAt?: T
  email?: T
  resetPasswordToken?: T
  resetPasswordExpiration?: T
  salt?: T
  hash?: T
  loginAttempts?: T
  lockUntil?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T
  taskStatus?: T
  completedAt?: T
  totalTried?: T
  hasError?: T
  error?: T
  log?:
    | T
    | {
        executedAt?: T
        completedAt?: T
        taskSlug?: T
        taskID?: T
        input?: T
        output?: T
        state?: T
        error?: T
        id?: T
      }
  taskSlug?: T
  queue?: T
  waitUntil?: T
  processing?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T
  globalSlug?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T
  key?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T
  batch?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding".
 */
export interface Onboarding {
  id: number
  steps: {
    userGoals: {
      type: 'multipleChoiceList' | 'multipleChoiceChips'
      data?: (number | OnboardingStepValue)[] | null
    }
    initialEmotionalState: {
      type: 'multipleChoiceList' | 'multipleChoiceChips'
      data?: (number | OnboardingStepValue)[] | null
    }
    wantedFeatures: {
      type: 'multipleChoiceList' | 'multipleChoiceChips'
      data?: (number | OnboardingStepValue)[] | null
    }
  }
  updatedAt?: string | null
  createdAt?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "onboarding_select".
 */
export interface OnboardingSelect<T extends boolean = true> {
  steps?:
    | T
    | {
        userGoals?:
          | T
          | {
              type?: T
              data?: T
            }
        initialEmotionalState?:
          | T
          | {
              type?: T
              data?: T
            }
        wantedFeatures?:
          | T
          | {
              type?: T
              data?: T
            }
      }
  updatedAt?: T
  createdAt?: T
  globalType?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskEmotion-statistics".
 */
export interface TaskEmotionStatistics {
  input?: unknown
  output?: unknown
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
